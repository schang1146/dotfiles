#!/usr/bin/env bash

DOTFILES_ROOT=$(pwd -P)

source $DOTFILES_ROOT/utils/logger

link_file() {
  local src=$1 dst=$2

  local overwrite= skip=

  if [ -f "$dst" -o -L "$dst" ]
  then

    local current_dst_symlink="$(readlink $dst)"

    if [ "$current_dst_symlink" == "$src" ]
    then

      skip=true

    else

      user "File already exists: $dst ($(basename "$src")), select an option:\n\
      [o]verwrite, [s]kip?"
      read -n 1 action

      case "$action" in
        o)
          overwrite=true
          ;;
        s)
          skip=true
          ;;
        *)
          ;;
      esac

    fi

    if [ "$overwrite" = true ]
    then
      rm -rf "$dst"
      success "Removed $dst"
    fi

    if [ "$skip" = true ]
    then
      success "Skipped $src"
    fi

  fi

  if [ "$skip" != true ]
  then
    ln -s $src $dst
    success "Linked $src to $dst"
  fi
}

install_dotfiles() {
  info "Installing dotfiles..."

  for src in $(find -H "$DOTFILES_ROOT" -name "*.symlink" -not -path "*.git*")
  do
    dst="$HOME/.$(basename "${src%.*}")"
    link_file "$src" "$dst"
  done
}

setup_gitconfig() {
  if ! [ -f git/gitconfig.symlink ]
  then
    info "Setting up gitconfig..."

    user " - Enter your github name:"
    read -e git_authorname
    user " - Enter your github email:"
    read -e git_authoremail

    sed -e "s/AUTHORNAME/$git_authorname/g" -e "s/AUTHOREMAIL/$git_authoremail/g" git/gitconfig.symlink.example > git/gitconfig.symlink
  fi
}

setup_gitconfig
install_dotfiles